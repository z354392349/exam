data.kfgj = [
  {
    title: "什么是专用的软件开发工具？它有什么优点和不足？ / 第一章",
    simple: "",
    normal: [
      "专用的软件开发工具是面对某一工作阶段或某一工作任务的工具。 ",
      "优点是能提高软件开发的质量和效率。 缺点是一致性的保持困难，对软件的开发缺乏全面的、统一的支撑环境。",
    ],
    start: 1,
  },
  {
    title: "简述高级程序设计语言的不足 / 第一章",
    simple: "",
    normal: [
      "第三代程序设计语言（即高级程序设计语言）一般都是过程化语言， ",
      "即需要由编写程序的人一步一步地安排好机器的执行次序，虽然不是一对一地指挥到机器指令，",
      "但是还必须在人的头脑中安排好实际的执行过程，需要安排执行的内容（与次序），需要考虑解决问题的细节，清楚如何解决问题，加重了用户的负担。 ",
    ],
    start: 1,
  },
  {
    title: " 简述高级程序设计语言相对于低级语言有哪些突破 / 第一章",
    simple: "突破，自然语言，独立",
    normal: [
      "高级程序设计语言突破了与机器指令一一对应的限制。",
      "用尽可能接近自然语言的表达方式描述人们设想的处理过程，而把这种表达方式向机器指令的转化工作，交给专门的“工具”——编译系统去完成；",
      "高级设计语言实现了对机器的独立性，提高了程序的可移植性。",
    ],
    start: 1,
  },
  {
    title: "试论软件开发工具的发展阶段及特点 / 第一章",
    simple: "",
    normal: [
      "1.利用通用软件作为辅助工具的阶段 ",
      "有许多工作是通用软件所无法完成的。通用软件完成某些工作也不能反映其逻辑内涵。常常遇到难于保持一致性的困难。",
      "2.专用的软件开发工具的阶段",
      "对软件的开发缺乏全面的、统一的支撑环境",
      "3.集成的软件开发环境阶段",
      "进入集成的软件开发环境阶段的标志是 IBM 在 1989 年提出的理论框架。",
      "4.二十一世纪的软件开发新阶段",
      "有两个鲜明的特点：第一是面向网络，不仅基于网络，而且用于网络。第二是开源软件的兴起和运用",
    ],
    start: 1,
  },
  {
    title: "试论软件开发工作发展变化的五个阶段及其特点  / 第一章",
    simple: "",
    normal: [
      "最初阶段，用机器语言写成一系列机器指令，供硬件执行；",
      "第二阶段，用汇编语言开发软件，由汇编程序完成转换；",
      "第三阶段，用高级语言开发软件，由编译程序完成转换；",
      "第四阶段，在各种软件开发工具帮助下开发软件，由编译程序完成转换；",
      "新阶段，由软件架构师完成架构设计，程序员用软件开发工具完成程序开发，由编译程序完成转换。",
    ],
    start: 1,
  },
  {
    title: "进入二十一世纪以来，软件开发工具的发展有什么特点? / 第一章",
    simple: "",
    normal: [
      "进入 21 世纪以来，两个鲜明的特点使软件开发工具的功能和效率提高到了一个新的阶段。",
      "第一个特点是面向网络，不仅基于网络，而且用于网络；另一个特点是开源软件的兴起和运用。",
    ],
    start: 1,
  },

  {
    title: "简述操作系统的出现对计算机的应用产生的影响 / 第一章",
    simple: "改善、优势、管理、改善",
    normal: [
      "操作系统的出现改善了人们应用计算机的条件。",
      "操作系统利用计算机本身迅速处理信息的优势，自动地完成系统初始化、文件管理、内存管理、作业管理、处理机管理等一系列工作，",
      "把计算机系统中的各种资源有效地、协调地管理起来，把原先由操作员担负的大部分职责接过来。",
      "这改善了计算机使用的环境，也同样对计算机应用的前进发挥了十分重要的作用。",
    ],
    start: 1,
  },

  {
    title: "简述汇编语言相对于机器语言的突破和不足? / 第一章",
    simple: "",
    normal: [
      "用英语单词代替“0”和“1”组成的字符串。汇编语言未能突破与机器指令一一对应的限制",
    ],
    start: 1,
  },

  {
    title:
      " 试论软件开发工具的提出与使用是软件技术发展的一个新的阶段。（论述题） / 第一章",
    simple: "自动分析设计 项目版本管理",
    normal: [
      "1.自动化程度的提高，编程中的部分工作已由工具代替执行。",
      "2.将需求分析和架构设计包括在软件工作的范围之内，从而使软件开发过程进一步向用户方面延伸。",
      "3.将软件开发工作延伸到项目及版本管理，从而超出了一次编程的局限， 而扩展到了作为一个不断发展的客体生长完善的全过程",
      "4.吸收了许多管理科学的内容与方法，将组织、管理等项目负责人的思想与方法放到了更重要的位置。",
      "人们越来越深刻地认识到，软件生产的成败更多地依赖于合理地组织与协调，而不是领导者或程序员个人的编程能力。",
    ],
    start: 1,
  },

  {
    title: "软件开发工具的主要性能指标有哪些 ?   / 第一章",
    simple: "表一方可环",
    normal: [
      "1.表达能力或描述能力,",
      "2.保持信息一致性的能力；",
      "3.使用的方便程度；",
      "4.工具的可靠程度；",
      "5.对软件和硬件环境的要求",
    ],
    start: 1,
  },
  {
    title:
      "软件开发工具的功能要求 / 针对软件开发工具的各个阶段，软件开发工具应在哪些方面提供帮助。  / 第一章",
    simple: "客存代文软",
    normal: [
      "1.认识与描述客观系统,",
      "2.存储及管理开发过程中的信息",
      "3.代码的编写或生成",
      "4.文档的编写或生成",
      "5.软件项目的管理",
    ],
    start: 1,
  },
  {
    title: "试述软件开发工具的基本功能  / 第四章",
    simple: "概存文代管",
    normal: [
      "提供描述软件状况及其发展过程的概念模式，",
      "提供存储和管理有关信息的机制和手段，",
      "帮助使用者编制、生成及修改各种文档。",
      "通过各种信息的提供，半自动地生成程序代码，进行测试、修改错误。",
      "对于历史信息进行跨生命周期的管理，把项目进度与版本更新的有关信息科学地管理起来。",
    ],
    start: 1,
  },
  {
    title: "软件开发工具按工作阶段可划分成哪几类?它们提供什么帮助？   / 第一章",
    simple: "",
    normal: [
      "可以分为三类：,",
      "计划工具，从更宏观的角度支持软件开发。",
      "分析工具，主要是支持需求分析；",
      "设计工具，帮助人们在实现阶段编写和调试软件",
    ],
    start: 1,
  },

  {
    title: "程序员做好软件工作的关键是什么 / 第二章",
    simple: "",
    normal: [
      "关键是两个转换",
      "第一个转换是用户对软件功能的理解与程序员对软件功能的理解之间的转换。",
      "第二个转换要解决的是人和机器之间的交流与协调问题。",
    ],
    start: 1,
  },
  {
    title: "大型软件开发有哪些困难 / 第二章",
    simple: "一测进文代新",
    normal: [
      "一致性的保持成为十分困难的问题",
      "测试的困难大大增加",
      "工作进度难以控制",
      "文档与代码的协调十分困难",
      "版本更新带来的困难",
    ],
    start: 1,
  },
  {
    title: "简述大型软件开发工作困难产生的原因 / 第二章",
    simple: "杂志域变",
    normal: [
      "这些困难来自大系统的复杂性；",
      "许多具有主动性的个人之间的组织与协调，这本身也带来大量的困难",
      "各个应用领域之间的差别也导致这些困难的加重；",
      "时间的因素，变化的因素也给软件开发工作带来许多困难。",
    ],
    start: 1,
  },
  {
    title: "简述软件工作者为提高软件开发工作水平和效率提出的方法 / 第二章",
    simple: "",
    normal: [
      "结构化程序设计",
      "软件工程方法",
      "面向对象的程序设计方法",
      "即插即用的程序设计方法，",
      "面向开源软件的程序设计。",
    ],
    start: 1,
  },
  {
    title:
      "简述结构良好的软件应满足的条件 / 简述模块的划分应当符合的基本要求 / 第二章",
    simple: "",
    normal: [
      "第一，模块的功能在逻辑上尽可能地单一化、明确化，最好做到一一对应。",
      "第二，模块之间的联系及互相影响尽可能地少。应当尽量避免逻辑耦合，而仅限于数据耦合。",
      "第三，模块的规模应当足够小",
    ],
    start: 1,
  },
  {
    title: "简述实施结构化程序设计的基本思想 / 第二章",
    simple: "一入一出不 goto，风格明确编文档",
    normal: [
      "1.限制（甚至不用）GOTO 语句，禁止超越模块边界的 GOTO 语句。",
      "2.子程序尽可能的做到只有一入口、一出口。",
      "3.程序风格应明确",
      "4.完成有关的文档编撰",
    ],
    start: 1,
  },
  {
    title: "简述软件工程思想的产生 / 第二章",
    simple: "",
    normal: [
      "软件危机的发生；把软件的质量寄托于程序员的技能与认真负责是不牢靠的；",
      "从根本上，要想大幅度地提高软件开发的效率和质量，应吸取人们的成功经验，从组织上和管理的角度加强力量；",
      "使软件生产从程序员的个人劳动提高成为可控制的工程，这就产生了软件工程。",
    ],
    start: 1,
  },
  {
    title: "简述软件工程从传统产业工程方法中吸取的成功经验 / 第二章",
    simple: "步任标体",
    normal: [
      "对软件工程工作的步骤作出了严格的规定；工作顺序不能颠倒；",
      "每一个阶段都有各自的明确的任务",
      "在质量、表达方式等方面要有统一的，并为人们共同遵守的标准；",
      "利用有关各方沟通与交流的手段，使参加工作的人们成为一个整体，共同地完成一项大的工程任务。",
    ],
    start: 1,
  },

  {
    title: "简述即插即用的程序设计的基本思想 / 第二章",
    simple: "",
    normal: [
      "是在面向对象的程序设计方法的基础上提出来的，应用硬件制造思路来处理大型软件开发工作的方法。",
      "一部分人专门生产软件组件，而另一部分人则构造整个软件的结构，",
      "并且把软件组件插入结构中，以便迅速地完成大型软件的研制工作。",
    ],
    start: 1,
  },

  {
    title: "在什么情况下利用开源软件进行程序设计比较合适？举例说明。  / 第二章",
    simple: "",
    normal: [
      "在一些应用面广，流程比较清晰、比较规范的应用领域，开源代码的重用是比较有把握的。 ",
      "例如，网站的设计确实可以从开源代码中找到比较实用的，略加修改就可以使用的代码。这无疑是可以节省人力和物力的。 ",
    ],
    start: 1,
  },
  {
    title: "简述好软件的质量要求 / 第二章",
    simple: "功、界、速、可、读",
    normal: [
      "第一，正确地实现所要求的功能，准确地给出预定的输出结果； ",
      "第二，用户界面友好，符合实际用户的使用习惯与知识能力； ",
      "第三，具有足够的速度（而不是越快越好），能在符合用户要求的时间限度内，给出所要求的处理结果； ",
      "第四，具有足够的可靠性，能够在各种干扰下保持正常的工作； ",
      "第五，系统程序易读，结构良好，文档齐全，从而保证易于修改。",
    ],
    start: 1,
  },
  {
    title: "简述可以单独地承担软件开发任务的程序员应具备的条件  / 第二章",
    simple: "",
    normal: [
      "具有程序设计所需要的基本知识与技能。 ",
      "对本项目所在的领域有较深入的了解，能够准确地理解用户的信息需求，正确地把握有关的信息流程与信息处理原则。",
      "对于软件开发的技术环境比较熟悉，对所用的语言，有足够的、实际运用的经验。 ",
    ],
    start: 1,
  },
  {
    title: "简述一个好的项目组应当具备的条件  / 第二章",
    simple: "标分时",
    normal: [
      "第一， 有严格的、成文的工作规范和文档标准，而且应当为全体成员所熟知，且切实得到遵守；",
      "第二， 人员之间有严格的分工，除了程序员之外，必须有专门的秘书（负责文档的收集、审核及保管），必须有专门的测试人员（负责测试和验收有关的部分），特别是要有专职的，不限于具体编程的项目负责人。 ",
      "第三， 每个项目都要事先制定详细的时间表，并且得到严格执行。 ",
    ],
    start: 1,
  },

  {
    title:
      "简述软件开发过程中各类人员与计算机之间流通信息的内容  / 软件开发过程中涉及哪几类信息，各有什么作用？  / 第三章",
    simple: "",
    normal: [
      "1.需求信息: 有关系统环境、现状及需求的信息。由用户提出，由分析人员采集，需求分析。",
      "2.设计方案: 有关软件的功能设计与物理设计的各种信息。由分析人员设计方案。",
      "3.代码文档: 软件成果本身，包括程序与文档。由程序员编制。",
      "4.变更要求：用户对系统的各种变更要求，以及系统的各种变更的记录。",

      // "需求信息，是有关系统环境、现状及需求的信息。",
      // "设计方案，是有关软件的功能设计与物理设计的各种信息。",
      // "代码文档，是软件成果的信息。",
      // "变更要求，以及系统变更的记录。",
    ],
    start: 1,
  },
  {
    title: "简述软件开发中常用的概念模式  / 第三章",
    simple: "",
    normal: [
      "框图、结构图、数据流程图、实体关系图、数据字典图、时序网络、数学与逻辑模型、计算机模拟模型。",
    ],
    start: 1,
  },
  {
    title: "简述时序网络的作用  / 第三章",
    simple: "",
    normal: [
      "时序网络是软件开发中常用的一种概念模式。",
      "主要描述系统的状态及其转换方式，状态是指系统在运行中某特定的形态或工作方式，转换是指状态在一定条件下的相互转换。",
      "经常应用于一些实时控制方面的软件功能描述。",
    ],
    start: 1,
  },
  {
    title: "简述实体关系图的组成和作用。  / 第三章",
    simple: "",
    normal: [
      "实体联系图由实体、联系和属性三部分组成。",
      "实体联系图是一种用于描述静态数据结构的概念模式。",
      "经常与数据流程图、结构图配合使用，广泛应用于数据库设计。",
    ],
    start: 1,
  },
  {
    title: "试述数据流程图的组成和作用  / 第三章",
    simple: "",
    normal: [
      "数据流程图由外部实体、数据处理与数据存储组成。",
      "数据流程图面对的是一个系统的信息流程。用于描述某一业务处理系统的信息来源、存储、处理、去向的全面情况。",
    ],
    start: 1,
  },
  {
    title:
      "试述软件开发工具中信息库(Repository)包含的主要内容   / 信息库的内容包括哪些方面？ / 第三章",
    simple: "",
    normal: [
      "1.有关软件应用的领域与环境的状况；",
      "1.需求分析阶段中收集的有关用户的信息；",
      "3.逻辑设计阶段的各种调查材料和由此生成的各种文档；",
      "4.系统设计阶段的文档，包括系统设计方案等各种资料；",

      "5.编程阶段的所有成果；",
      "6.运行与使用情况的详细记录；",
      "7.维护与修改的情况；",
      "8.项目管理的有关信息和版本管理的有关过程记录。",
    ],
    start: 1,
  },

  {
    title: "简述信息库中保存的设计阶段资料的内容  / 第三章",
    simple: "",
    normal: [
      "设计阶段的各种资料包括所有的数据库与数据文件格式,数据字典,总体结构和程序模块的要求",
      "各种接口及参数的传递方式以及最后形成的设计方案",
    ],
    start: 1,
  },
  {
    title: " 简述信息库中保存的版本管理信息的内容 / 第三章",
    simple: "备日比",
    normal: [
      "包括各个版本的备份、每个版本的推出日期、与以前版本相比的变更说明。",
    ],
    start: 1,
  },
  {
    title: "简述信息库中保存的编程阶段成果的内容  / 第三章",
    simple: "",
    normal: ["包括程序代码与框图、变量说明、测试情况、验收报告和使用说明。"],
    start: 1,
  },
  {
    title: "简述信息库中保存的运行与使用情况的内容  / 第三章",
    simple: "",
    normal: [
      "运行及使用情况的详细记录包括每次使用的时间、状态、问题，特别是有关错误和故障的记录情况。",
    ],
    start: 1,
  },
  {
    title: "信息库中应保存哪些关于维护与修改的内容？  / 第三章",
    simple: "",
    normal: [
      "维护与修改的情况包括修改的目标、责任人、过程、时间、修改前后的代码与文档以及修改后的结果、原系统的备份",
    ],
    start: 1,
  },
  {
    title: "简述用户界面设计的基本原则  / 第三章",
    simple: "通信一致有进展 方便用户给帮助",
    normal: [
      "用户界面的主要功能是通信；",
      "用户界面必须始终一致；",
      "用户界面必须使用户随时掌握任务的进展情况",
      "用户界面必须提供帮助",
      "宁可让程序多干，不可让用户多干",
    ],
    start: 1,
  },
  {
    title: "简述项目管理的基本目标  / 第三章",
    simple: "制度资本",
    normal: [
      "使产品（工程）的质量得到有效的控制；",
      "保证整个系统按预定的进度完成；",
      "有效地利用各种资源",
      "控制与降低成本",
    ],
    start: 1,
  },
  {
    title:
      "试述软件项目管理的特点和基本目标 / .与一般工厂的日常生产管理相比，项目管理有什么特点？它的基本目标是什么 / 第三章",
    simple: "",
    normal: [
      "特点：",
      "子任务多，关系复杂；",
      "协调组织的任务十分突出，资源浪费闲置的风险与合理地优化组合、提高效益的机会并存；",
      "信息处理工作的作用与意义更为突出。",
      "基本目标：",
      "使产品（或工程）的质量得到有效的控制；",
      "保证整个系统按预定的进度完成；",
      "有效地利用资源，尽可能使用资源的闲置和浪费减少",
      "控制与降低成本。",
    ],
    start: 1,
  },

  {
    title: "简述软件开发工具生成代码依据的资料  / 第四章",
    simple: "",
    normal: [
      "信息库中已有的有关资料",
      "利用各种标准模块的框架和构件",
      "依据使用者通过屏幕前的操作送入的信息",
    ],
    start: 1,
  },

  // 不要和项目管理的特点搞混
  {
    title: "软件项目管理的主要内容。（论述）  / 第四章",
    simple: "方方分分圆圆变量",
    normal: [
      "研究确定开发工作的方针和方法",
      "开发任务的划分与分工",
      "资源状况。包括：人力、物力、设备、软件、资金。",
      "人员情况。包括每个成员或团队的技术水平和工作进度。",
      "变更情况。包括需求、环境、人员、技术、设备的变更。",
      "质量情况。包括质量标准、如何检验。",
    ],
    start: 1,
  },
  {
    title: "软件开发工具的运行环境  / 第五章",
    simple: "硬软数网",
    normal: [
      "所谓工作环境包括硬件配置（内存规模、磁盘容量、主机速度、输入输出设备） ",
      "系统软件（即操作系统）、数据库管理系统、网络通信等各种条件。",
    ],
    start: 1,
  },
  {
    title: "在购置软件开发工具时，必须要明确什么？ / 第五章",
    simple: "",
    normal: [
      "为哪个软件开发项目而使用工具；",
      "在哪个工作阶段使用工具；",
      "工具将供哪些人使用",
      "工具将在怎样的软件、硬件环境下运行。",
    ],
    start: 1,
  },
  {
    title: "简述购置软件开发工具的方法与步骤  / 第五章",
    simple: "",
    normal: [
      "明确购买软件开发工具目的与要求",
      "明确购买软件工具的环境条件与制约条件",

      "市场调査",
      "对于可供选择的各种工具进行综合比较",
      "进行测试和检验",
      "正式签约购置",
      "安装与试用",
    ],
    start: 1,
  },
  {
    title: "简述对开发工具使用过程进行审计的主要内容  / 第五章",
    simple: "",
    normal: [
      "有没有出现过错误",
      "有没有出现过数据丢失或错误的情况，",
      "有没有出现过由于误操作而引起的异常情况，",
      "对这些情况有哪些纠正和补救措施，其效果如何。",
    ],
    start: 1,
  },
  {
    title: "简述软件开发工作中审计的意义和目的  / 第五章",
    simple: "",
    normal: [
      "审计是指对系统的运行状况及效率进行检测与评价,以便用好或改进系统。",
      "审计的目的就是为了做到心中有数、用好工具、保证取得实际的应用效果。",
    ],
    start: 1,
  },
  {
    title: "简述软件开发工具使用中，审计的范围。  / 第五章",
    simple: "",
    normal: [
      "所谓审计是指对一个系统的运行状况及效率进行检测与评价，以便进一步用好或改进这个系统。 ",
      "审计的范围应当包括工具使用的环境、人员、工作负担、工作效果、存在问题、改进方向等许多方面。",
    ],
    start: 1,
  },
  {
    title: "简述对购置开发工具进行审计的主要内容  / 第五章",
    simple: "",
    normal: [
      "希望利用的功能，投入的资金和人力，定量计算的收益和无法定量计算的收益，从经济上看是否合理。",
    ],
    start: 1,
  },
  {
    title:
      "引入软件开发工具之后，应当进行的组织管理工作包括哪些方面？  / 第五章",
    simple: "度过培审",
    normal: [
      "严格使用制度。记录使用的详细过程。培训使用人员。经常进行审计与评价工作。",
    ],
    start: 1,
  },
  {
    title: "在引入软件开发工具之后，如何严格使用制度？  / 第五章",
    simple: "",
    normal: [
      "明确信息来源、使用权限、维护职责等有关事宜",
      "明确规定由哪些人在什么时候完成任务",

      "对于已经存入信息库的信息也要规定其使用权限及维护责任",
      "如果没有明确规定，信息库的内容就失去了可靠性，工具的运用也就失去了基础",
    ],
    start: 1,
  },

  {
    title:
      "简述记录软件开发工具使用过程的主要内容  , / 记录使用的详细过程   / 第五章",
    simple: "",
    normal: [
      "记录内容包括系统运行的次数、时间，信息库的输入与更新时间，各种输出的质量与数量，使用者的反映与满意程度，各种故障的情况及处理。",
    ],
    start: 1,
  },
  {
    title: "什么是软件开发工具的标准化 ?  / 第六章",
    simple: "",
    normal: [
      "软件开发工具的标准化是指 软件构件的标准化 以及用 标准构件组成 大型软件结构的标准化",
    ],
    start: 1,
  },
  {
    title:
      "从发展趋势来看，软件开发工具领域有哪些值得关注的方向？/ 第六章 / 历年真题",
    simple: "",
    normal: ["智能化、网络化、一体化、标准化。"],
    start: 1,
  },
  {
    title: "简述软件开发工具的智能化的含义 / 第六章",
    simple: "",
    normal: [
      "所谓智能化，具体来说就是在软件开发工具的研究和使用中引用人工智能、神经网络等技术, ",
      "使得软件开发工具对于不确定信息和模糊信息具有更强的处理能力，提高信息处理的功能与效率。",
    ],
    start: 1,
  },
  {
    title:
      " 简述软件开发工具的网络化发展方向 /  计算机网络的普遍使用对软件开发工具有什么影响？  第六章",
    simple: "",
    normal: [
      "通过网络，人们可以更方便地互通信息，共享知识，这就给人们所梦想的软件重用、知识重用提供了新的机会。",
      "例如，在项目管理方面，网络的应用使人们更便于掌握项目的进展状况、质量状况等。",
    ],
    start: 1,
  },

  {
    title: "怎样才能实现软件开发工具的一体化？ / 第六章",
    simple: "",
    normal: [
      " 对于软件开发中涉及的各种信息，以及在开发过程中它们的发生、变化、关系和一致性等有完整与深刻的理解",
    ],
    start: 1,
  },

  {
    title:
      "简述在 Windows 操作系统的环境下，Visual Studio 与 Eclipse 相比的优势。 / 第六章",
    simple: "",
    normal: [
      "Visual Studio 在微软环境下和其他产品的交互协同能够浑然一体，天衣无缝；开发使用容易；产品间的差别透明度高；在运行速度，代码显示速度等方面也强于 Eclipse。",
    ],
    start: 1,
  },
  {
    title: " 与 Visual Studio 相比，Eclipse 的优势表现在哪些方面? / 第六章",
    simple: "",
    normal: [
      "与 Visual Studio 相比，Eclipse“大平台，小核心，多插件”的特点显得更富有灵活性；在各种操作系统上表现差异非常小。",
    ],
    start: 1,
  },
  {
    title: "简述面向对象过程的一般步骤 / 十四章",
    simple: "",
    normal: [
      "1.标识和定义对象及类；",
      "2.组织类间的关系；",
      "3.在类层中构造框架；",
      "4.建立可重用的类库和应用程序框架",
    ],
    start: 1,
  },
  {
    title: "简述面向对象方法及基本特点 / 十四章",
    simple: "",
    normal: [
      "面向对象方法简称为OO方法。它由面向对象分析（OOA）、面向对象设计（OOD）和面向对象程序设计（OOP）组成。",
      "特点：强调对现实世界的理解和模拟，把现实世界到信息世界的转化工作减少到最小，所以特别适用于系统分析和系统设计。",
    ],
    start: 1,
  },
  {
    title: "简述在面向对象方法中，对象与类的关系。  / 十四章",
    simple: "",
    normal: [
      "类是对一组几乎相同的对象的描述。从一组对象中抽象出公共数据与方法，并将它们保存在一类中，是面向对象功能的核心。",
      "类是创建对象的框架，而对象是类的实例。",
      "在同一类的对象也可根据其他相似特征而分成子类，所以类具有层次特征。",
    ],
    start: 1,
  },
  {
    title: "简述采用 Rational Rose 建模的过程。 / 十四章",
    simple: "",
    normal: [
      "确认应用系统的功能需求，并为事务处理原则建模 ",
      "对抽象的对象映射需求，提供设计模板并创建惯用的模板；",
      "分辨和设计对象（或划分三层模型的服务）；",
      "对软件的组成部分映射成对象并设计组件在网络上如何分布。",
    ],
    start: 1,
  },
  {
    title:
      "简述统一建模语言（UML）中顺序图（Sequence Diagram）的含义。 / 十四章",
    simple: "",
    normal: [
      "顺序图是强调消息时间顺序的交互图。顺序图描述类系统中类和类之间的交互，它将这些交互建模成消息交换。",
      "换句话说，顺序图描述了类以及类之间相互交换以完成期望行为的消息。",
    ],
    start: 1,
  },
  {
    title: "使用cvs可以实现对软件开发的有效管理,这具体表现在哪些方面? / 十四章",
    simple: "修改文档时间点，管理隔离进度",
    normal: [
      "1.随时将程序恢复到以前某一时间点。",
      "2.实现程序的互斥性修改",
      "3.对程序修改进行有效的管理",
      "4.将开发环境与测试环境、运行环境有效的隔离",
      "5.评估软件开发人员编码的程序质量，控制软件开发速度",
      "6.管理文档",
    ],
    start: 1,
  },
  {
    title: "简述面向对象的对象、类、属性的含义。 /  历年真题",
    simple: "",
    normal: [
      "对象：它是一些属性及操作行为的封装体，是问题空间中一些东西的抽象。 ",
      "类：它是对一组几乎相同的对象的描述。",
      "属性：以静态的数据组成，用以描述类和对象所固有的特征，是对客观世界实体所具有的性质的抽象",
    ],
    start: 1,
  },

  {
    title: "版本管理的核心任务是什么？有哪些方法？ /  历年真题",
    simple: "",
    normal: [
      "版本管理的核心是保持两个一致性：系统完善过程中，前后一致；系统的局部与整体一致。",
      "具体方法：规定长远的版本更新计划，制订版本有关的信息范围及收集、管理方法，在项目组内明确分工，在程序编写、测试、文档缩写等工作中贯穿项目管理的思想及要求",
      "",
    ],
    start: 1,
  },
  {
    title: "自行研制软件开发工具要注意哪些问题 /  历年真题",
    simple: "",
    normal: [
      "从实际出发，设定现实的、有限的目标。",
      "坚持短小实用，逐步积累，避免期望过高，贪大求全。",
      "注意文档的齐全与资料的积累。",
    ],
    start: 1,
  },
  {
    title: "简述信息库的三种结构方式及各自的特点 /  历年真题",
    simple: "",
    normal: [
      "集中存储。特点：比较自然，充分利用已有的数据库技术，比较容易保持一致性。缺点：与模块化要求相冲突。",
      "分散存储。特点：易于变更和剪裁，一旦某一部分发生变更，不致影响整个系统。但是，每个模块都要自己进行一整套增、删、改的操作，而且部分之间的一致性无从保证。",
      "逻辑上统一，物理上分散，设立统一的信息库管理模块来进行管理。特点：数据库与模块都实现了模块化，既保持了一致性，又保持了灵活性。",
    ],
    start: 1,
  },
  {
    title: "什么是概念模式？它有什么作用？ /  历年真题",
    simple: "",
    normal: [
      "概念模式指人们在认识事物过程中，对于某一事物或某一系统形成的、抽象的、一般化的框架。",
      "概念模式具有客观性，又有主观性。",
      "作用：",
      "它是人们认识客观世界的一种工具。",
      "是人们交流与表达的工具",
    ],
    start: 1,
  },

  {
    title: "简述软件开发过程的几个主要阶段 /  历年真题",
    simple: "",
    normal: ["需求分析；分析与设计阶段；编程阶段；测试阶段；使用及维护阶段。"],
    start: 1,
  },

  {
    title:
      "从信息管理的角度，AD/Cycle 框架中项目管理的范围包括哪些方面？ /  历年真题",
    simple: "",
    normal: [
      "研究与确定开发工作的方针方法",
      "开发任务的划分与分工",
      "资源状况",
      "人员情况",
      "变更情况",
      "质量情况",
    ],
    start: 1,
  },
  {
    title: "为了合理地选择软件开发工具，市场调查应包括哪些内容？ /  历年真题",
    simple: "",
    normal: [
      "软件开发工具的功能",
      "软件开发工具的性能",
      "软件开发工具所使用或依据的开发方法或开发理论",
      "软件开发工具的运行环境",
      "软件开发工具的文档资料是否齐全",
      "软件开发工具的服务、培训条件如何。",
      "价格",
    ],
    start: 1,
  },
];
