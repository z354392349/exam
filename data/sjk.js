data.sjk = [
    {
        title: "数据库管理系统提供哪些对数据的统一管理和控制功能? ",
        simple: "",
        normal: [
            '数据库管理系统具有对数据的统一管理和控制功能，主要包括数据的安全性、完整性、并发控制与故障恢复等，即数据库保护',
        ],
        start: 1,
    },
    {
        title: "主要的逻辑数据模型有哪些？",
        normal: [
            '主要的逻辑数据模型有层次模型、网状模型、关系模型、面向对象模型'
        ],
        start: 1,
    },
    {
        title: "请列出 MySQL 中和表定义相关的四个 SQL 语句。",
        normal: [
            '1.创建表：在 MySQL 中，可以使用 CREATE TABLE 语句创建表',
            '2.更新表：在 MySQL 中，可以使用 ALTER TABLE 语句来更改原有表的结构。',
            '3.重命名表：除了 ALTER TABLE 语句，还可以直接用语句 RENAME TABLE 来更改表名，并可同时命名多个表。',
            '4.删除表：如若需要删除数据库中已存在的表，可以通过使用 DROP TABLE 语句来实现。',
            '5.查看表：',
            '5.1.显示表的名称：在 MySQL 中，可以使用 SHOW TABIES 语句来显示指定数据库中存放的所有表名；',
            '5.2.显示表的结构：在 MySQL 中，可以使用 SHOW COLUMNS 语句来显示指定数据表的结构',
        ],
        start: 1,
    },
    {
        title: "关系模型中常用的关系操作是什么",
        normal: [
            '关系模型中常用的关系操作包括查询（Query）操作和插入(Insert)、删除（Delete）、修改（Update）操作两大部分。',
        ],
        start: 1,
    },
    {
        title: "关系操作中的查询操作有哪些？",
        normal: [
            '选择、投影、并、差、笛卡尔积、连接、除、交',
        ],
        start: 1,
    },
    {
        title: "简述传统的集合运算有哪些？",
        normal: [
            '传统的集合运算是二目运算，它将关系看成元组的集合，其运算是从关系的“水平”方向，即行的角度来进行，具体有并、差、交、笛卡尔积 4 种运算。',
        ],
        start: 1,
    },
    {
        title: "在 MySQL 中,定义外键时需要指定参照完整性的实现策略,除了 RESTRICT 外，还有其他哪两种含义不同的实现策略？",
        normal: [
            '关键字“CASCADE”表示级联策略,即从被参照表中删除或更新记录行时,自动删除或更新参照表中匹配的记录行;',
            '关键字“SET NULL”表示置空策略, 即当从被参照表中删除或更新记录行时,设置参照表中与之对应的外键列的值为 NULL,这个策略需要被参照表中的外键列没有声明限定词 NOT NULL',
        ],
        start: 1,
    },
    {
        title: "常见的 NoSQL 数据存储模型有哪些？",
        normal: [
            'NoSQL 系统支持的数据存储模型通常有键值（Key-Value）模型、文档（Document）模型、列（Column）模型和图（Graph）模型等',
        ],
        start: 1,
    },
    {
        title: "简述主属性和非主属性的区别",
        normal: [
            '关系中包含在任何一个候选码中的属性称为主属性或码属性，不包含在任何一个候选码中的属性称为非主属性或非码属性。',
        ],
        start: 1,
    },
    {
        title: "请简述数据库应用软件设计与实现的基本步骤",
        normal: [
            '数据库应用软件的设计与开发过程可由需求分析、系统功能与数据库的设计、系统功能与数据库的实现、测试与维护等阶段构成。',
        ],
        start: 1,
    },
    // 11题
    {
        title: "简述系统测试与维护的作用",
        normal: [
            '完成系统的实现工作之后，在正式交付用户使用之前，需要对所开发的系统进行必要的测试，验证其是否满足用户的功能要求，并根据测试的结果，以及用户的反馈意见，对该系统进行进一步的修改、完善和维护工作。',
        ],
        start: 1,
    },
    {
        title: "请叙述文章《第三代数据库系统宣言》中指出第三代数据库系统应具有的基本特征。",
        normal: [
            '1.第三代数据库系统应支持数据管理、对象管理和知识管理。',
            '2.第三代数据库系统必须保持或继承第二代数据库系统的技术。',
            '3.第三代数据库系统必须对其他系统开放。',
        ],
        start: 1,
    },

    {
        title: "数据库的生命周期可分为哪些阶段？",
        normal: [
            '从数据库演变过程的角度来看，数据库的生命周期可分为两个阶段，分别是数据库分析与设计阶段、数据库实现与操作阶段。',
        ],
        start: 1,
    },
    {
        title: "数据库实现与操作阶段包括哪些子阶段？",
        normal: [
            '数据库实现与操作阶段包括数据库的实现、操作与监督、修改与调整三个子阶段。',
        ],
        start: 1,
    },
    {
        title: "简述左外连接和右外连接的区别",
        normal: [
            '1.左外连接：也称左连接。以左表为基表，在 FROM 子句中使用关键字“LEFT OUTER JOIN”或关键字“LEFT JOIN”来连接两张表。',
            '2.右外连接：也称右连接。以右表为基表，在 FROM 子句中使用关键字“RIGHT OUTER JOIN”或关键字“RIGHT JOIN”来连接两张表。',
        ],
        start: 1,
    },
    {
        title: "简述多表连接查询中的内连接方式。",
        normal: [
            '内连接是一种最常用的连接类型，它是通过在查询中设置连接条件的方式，来移除查询结果集中某些数据行之后的交叉连接。',
        ],
        start: 1,
    },
    {
        title: "简述多表连接查询中内连接的三种使用情形。",
        normal: [
            '1.等值连接：在 FROM 子句中使用关键字“INNER JOIN”或“JOIN”连接两张表时，如若在ON 子句的连接条件中使用运算符“=”（即等号），即进行相等性测试，则此连接方式称为等值连接，也称为相等连接。',
            '2.非等值连接：在 FROM 子句中使用关键字“INNER JOIN”或“JOIN”连接两张表时，如若在 ON 子句的连接条件中使用除运算符“=”之外的其他比较运算符，即进行不相等性测试，则此连接方式称为非等值连接，也称为不等连接。',
            '3.自连接：在 FROM 子句中使用关键字“INNER JOIN”或“JOIN”连接两张表时，可以将一个表与它自身进行连接，这种连接方式称为自连接。'
        ],
        start: 1,
    },
    {
        title: "说明 DROP TABLE  语句和 DELETE  语句的联系和区别。",
        normal: [
            'DROP TABLE 语句和 DELETE 语句都可以从基本表中删除元组。',
            'DROP TABLE 语句不但删除表中的全部元组，还删除整个关系表结构。',
            'DELETE 语句可以根据条件删除表中部分元组。'
        ],
        start: 1,
    },
    {
        title: "简述 逻辑结构设计的主要步骤",
        normal: [
            '1.模型转换是指将概念模型等价地转换为特定 DBMS 支持的关系模型、网状模型或层次模型表示。',
            '2.子模式设计的目标 是抽取或导出模式的子集，以构造不同用户使用的 局部数据逻辑结构。',
            '3.编制应用程序设计说明 的目的是为 可实际运行的应用程序设计 提供依据与指导，并作为设计评价的基础。',
            '4.设计评价的任务是 分析并检验模式及子模式的 正确性与合理性。'
        ],
        start: 1,
    },
    {
        title: "简述集合运算中“并”运算的定义。",
        normal: [
            '假设有两个关系 R1 和 R2,R1 和 R2 的并运算产生一个新关系 R3。R3 是由属于关系 R1或 R2 的所有不同元组所组成，记为 R3=R1∪R2。',
        ],
        start: 1,
    },

    // 21题

    {
        title: "简述完整性约束条件中列级约束包括的内容",
        normal: [
            '对数据类型的约束，其包括数据类型、长度、精度等。',
            '对数据格式的约束',
            '对取值范围或取值集合的约束',
            '对空值的约束'
        ],
        start: 1,
    },
    {
        title: "简述触发器的概念",
        normal: [
            '触发器是用户定义在关系表上的一类由事件驱动的数据库对象，也是一种保证数据完整性的方法。',
        ],
        start: 1,
    },

    {
        title: "数据中外码（或外键）的含义是什么？",
        normal: [
            '当关系中的某个属性不是这个关系的主码或候选码，而是另一关系的主码时，称该属性为这个关系的外码或外键。',
        ],
        start: 1,
    },
    {
        title: "简述全码（或全键）的含义。",
        normal: [
            '一个关系模式的所有属性集合是这个关系的主码或主键，则称这样的主码或主键为全码或全键。',
        ],
        start: 1,
    },
    {
        title: "简述数据库数据完整性的含义。",
        normal: [
            '数据库的数据完整性是指数据库中数据的正确性、相容性和一致性。这是一种语义概念，包括两个方面：与现实世界中应用需求的数据的正确性、相容性和一致性；数据库内数据之间的正确性、相容性和一致性。',
        ],
        start: 1,
    },
    {
        title: "什么是数据库的完整性?",
        normal: [
            '数据库完整性是指数据库中数据的正确性和相容性。',
        ],
        start: 1,
    },
    {
        title: "请简述数据完整性约束的含义",
        normal: [
            '数据完整性约束是为了防止数据库中 存在不符合语义的数据，为了维护数据的完整性，',
            'DBMS 必须提供一种机制来检查数据库中的数据，以判断其是否满足语义规定的条件。这些加在数据库数据之上的语义约束条件就是数据完整性约束。',
        ],
        start: 1,
    },
    {
        title: "数据库设计的目标是什么？",
        normal: [
            '数据库设计的目标：满足应用功能需求和良好的数据库性能。',
        ],
        start: 1,
    },
    {
        title: "简述存储函数和存储过程的区别。",
        normal: [
            '1、存储函数不能拥有输出参数，这是因为存储函数自身就是输出参数；而存储过程可以拥有输出参数。',
            '2、可以直接对存储函数进行调用，且不需要使用 CALL 语句；而对存储过程的调用，需要使用 CALL 语句。',
            '3、存储函数中必须包含一条 RETURN 语句，而这条特殊的 SQL 语句不允许包含于存储过程中。',
        ],
        start: 1,
    },
    {
        title: "请说明实体、属性、码或键的概念。",
        normal: [
            '实体：客观存在并可相互区别的事物称为实体。',
            '属性：实体所具有的某种特性称为实体的属性。',
            '码或键：可唯一标识实体的属性集称为码或键。',
        ],
        start: 1,
    },
    // 31 
    {
        title: "请说明数据库的定义",
        normal: [
            '数据库（DB）是指长期储存在计算机中的有组织的、可共享的数据集合，',
            '且数据库中的数据按一定的数据模型组织、描述和存储，具有较小的冗余度、较高的数据独立性，系统易于扩展，并可以被多个用户共享。',

        ],
        start: 1,
    },
    {
        title: "在关系数据库中，表有哪些部分组成？",
        normal: [
            '表也称为关系，是一个二维的数据结构，它由表名、构成表的各个列及若干行数据组成。'

        ],
        start: 1,
    },
    {
        title: "请简述关系数据库的基本特征",
        normal: [
            '关系数据库的基本特征是使用关系数据模型组织数据，这种思想源于数学。'
        ],
        start: 1,
    },
    {
        title: "简述第三范式的定义",
        normal: [
            '第三范式定义： 设 R 为任一给定关系，若 R 为 2NF，且其每一个非主属性都不传递函数依赖于候选关键字，则 R 为第三范式。'
        ],
        start: 1,
    },
    {
        title: "简述索引存在的弊端有哪些。",
        normal: [
            '索引存在的弊端如下：',
            '1.索引是以文件的形式存储的，DBMS 会将一个表的所有索引保存在同一个索引文件中，索引文件需要占用磁盘空间。',
            '2.索引在提高查询速度的同时，却会降低更新表的速度。'
        ],
        start: 1,
    },
    {
        title: "简述存储过程的基本概念",
        normal: [
            '存储过程是一组为了完成某项特定功能的 SQL 语句集，其实质上就是一段存储在数据库中 的代码，它可以由声明式的 SQL 语句和过程式 SQL 语句组成。'
        ],
        start: 1,
    },
    {
        title: "请简述在数据库的操作中使用存储过程的优点。",
        normal: [
            '1、可增强 SQL 语言的功能和灵活性 。',
            '2、良好的封装性 。',
            '3、高性能 。',
            '4、可减少网络流量 。',
            '5、存储过程可作为一种安全机制来确保数据库的安全性和数据的完整性 。'
        ],
        start: 1,
    },
    {
        title: "简述使用视图的优点。",
        normal: [
            '1.集中分散数据；',
            '2.简化查询语句；',
            '3.重用 SQL 语句；',
            '4.保护数据安全；',
            '5.共享所需数据；',
            '6.更改数据格式。',
        ],
        start: 1,
    },
    {
        title: "简述 MySQL  中候选键与主键之间的区别",
        normal: [
            '1.一个表中只能创建一个主键，但可以定义若干个候选键。',
            '2.定义主键约束时，系统会自动产生 PRIMARY KEY 索引，而定义候选键约束时，系统自动产生 UNIQUE 索引。',
        ],
        start: 1,
    },
]